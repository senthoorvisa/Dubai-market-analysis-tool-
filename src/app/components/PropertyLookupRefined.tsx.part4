        {/* Property Data Display */}
        {propertyData && (
          <div className="bg-white rounded-lg shadow-sm overflow-hidden">
            {/* Property Header */}
            <div className="p-6 border-b border-almond">
              <div className="flex flex-col md:flex-row md:items-center md:justify-between gap-4">
                <div>
                  <h2 className="text-2xl font-bold text-dubai-blue-900">{propertyData.metadata.name}</h2>
                  <p className="text-dubai-blue-700 flex items-center gap-1 mt-1">
                    <FaMapMarkerAlt className="text-tuscany" />
                    {propertyData.metadata.location}
                  </p>
                </div>
                <div className="flex flex-col items-end">
                  <div className="text-xl font-bold text-tuscany">
                    {formatCurrency(propertyData.priceHistory[propertyData.priceHistory.length - 1]?.price || 0)}
                  </div>
                  <div className="text-dubai-blue-700 text-sm">
                    Last updated: {propertyData.priceHistory[propertyData.priceHistory.length - 1]?.year || new Date().getFullYear()}
                  </div>
                </div>
              </div>
              
              {/* Property Details */}
              <div className="mt-4 flex flex-wrap gap-4">
                <div className="flex items-center text-dubai-blue-700">
                  <FaBed className="mr-2 text-tuscany" />
                  <span>{propertyData.metadata.beds === 0 ? 'Studio' : `${propertyData.metadata.beds} Beds`}</span>
                </div>
                <div className="flex items-center text-dubai-blue-700">
                  <FaBath className="mr-2 text-tuscany" />
                  <span>{propertyData.metadata.baths} Baths</span>
                </div>
                <div className="flex items-center text-dubai-blue-700">
                  <FaRulerCombined className="mr-2 text-tuscany" />
                  <span>{propertyData.metadata.sqft.toLocaleString()} sqft</span>
                </div>
                <div className="flex items-center text-dubai-blue-700">
                  <FaBuilding className="mr-2 text-tuscany" />
                  <span>Developer: {propertyData.metadata.developer}</span>
                </div>
                <div className="flex items-center text-dubai-blue-700">
                  <FaCalendarAlt className="mr-2 text-tuscany" />
                  <span>Built: {propertyData.metadata.purchaseYear}</span>
                </div>
              </div>
            </div>
            
            {/* Tabs */}
            <div className="border-b border-almond">
              <div className="flex">
                <button
                  className={`px-6 py-3 font-medium ${
                    selectedTab === 'properties'
                      ? 'text-tuscany border-b-2 border-tuscany'
                      : 'text-dubai-blue-700 hover:text-tuscany'
                  }`}
                  onClick={() => setSelectedTab('properties')}
                >
                  Price & Nearby
                </button>
                <button
                  className={`px-6 py-3 font-medium ${
                    selectedTab === 'ongoing'
                      ? 'text-tuscany border-b-2 border-tuscany'
                      : 'text-dubai-blue-700 hover:text-tuscany'
                  }`}
                  onClick={() => setSelectedTab('ongoing')}
                >
                  Ongoing Projects
                </button>
                <button
                  className={`px-6 py-3 font-medium ${
                    selectedTab === 'developer'
                      ? 'text-tuscany border-b-2 border-tuscany'
                      : 'text-dubai-blue-700 hover:text-tuscany'
                  }`}
                  onClick={() => setSelectedTab('developer')}
                >
                  Developer Info
                </button>
              </div>
            </div>
            
            {/* Tab Content */}
            <div className="p-6">
              {/* Price History & Nearby Properties */}
              {selectedTab === 'properties' && (
                <div>
                  {/* Price History Chart */}
                  <div className="mb-8">
                    <div className="flex items-center justify-between mb-4">
                      <h3 className="text-xl font-bold text-dubai-blue-900">Price History</h3>
                      {chartZoom && (
                        <button
                          onClick={resetChartZoom}
                          className="text-sm text-tuscany hover:text-tuscany/70 flex items-center gap-1"
                        >
                          <FaChevronLeft className="h-3 w-3" /> Reset Zoom
                        </button>
                      )}
                    </div>
                    <div className="h-72 bg-white rounded-lg p-2 border border-almond">
                      <ResponsiveContainer width="100%" height="100%">
                        <LineChart
                          data={propertyData.priceHistory}
                          margin={{ top: 5, right: 30, left: 20, bottom: 5 }}
                          onMouseDown={(e) => e && setChartZoom({ startIndex: e.activeTooltipIndex || 0, endIndex: e.activeTooltipIndex || 0 })}
                          onMouseMove={(e) => chartZoom && e && setChartZoom({ ...chartZoom, endIndex: e.activeTooltipIndex || chartZoom.endIndex })}
                          onMouseUp={() => chartZoom && setChartZoom({ startIndex: Math.min(chartZoom.startIndex, chartZoom.endIndex), endIndex: Math.max(chartZoom.startIndex, chartZoom.endIndex) })}
                        >
                          <CartesianGrid strokeDasharray="3 3" />
                          <XAxis 
                            dataKey="year" 
                            domain={chartZoom ? [propertyData.priceHistory[chartZoom.startIndex]?.year, propertyData.priceHistory[chartZoom.endIndex]?.year] : ['auto', 'auto']}
                          />
                          <YAxis 
                            tickFormatter={(value) => `${(value / 1000000).toFixed(1)}M`} 
                            domain={chartZoom ? ['auto', 'auto'] : ['auto', 'auto']}
                          />
                          <Tooltip 
                            formatter={(value) => [formatCurrency(value as number), 'Price']} 
                            labelFormatter={(label) => `Year: ${label}`}
                          />
                          <Legend />
                          <Line 
                            type="monotone" 
                            dataKey="price" 
                            stroke="#E28F83" 
                            activeDot={{ r: 8 }} 
                            strokeWidth={2}
                            name="Property Value"
                          />
                          <ReferenceLine
                            y={propertyData.priceHistory[0]?.price}
                            stroke="#2B4865"
                            strokeDasharray="3 3"
                            label={{ value: 'Purchase Price', position: 'insideBottomRight' }}
                          />
                        </LineChart>
                      </ResponsiveContainer>
                    </div>
                    <div className="mt-2 text-sm text-dubai-blue-700 italic">
                      <span className="font-medium">Tip:</span> Click and drag on the chart to zoom in on a specific time period.
                    </div>
                  </div>
                  
                  {/* Nearby Properties */}
                  <div>
                    <h3 className="text-xl font-bold text-dubai-blue-900 mb-4">Nearby Properties</h3>
                    {propertyData.nearby.length > 0 ? (
                      <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                        {propertyData.nearby.map((property) => (
                          <div 
                            key={property.id}
                            className="border border-almond rounded-lg overflow-hidden hover:shadow-md transition-shadow cursor-pointer"
                            onClick={() => handleNearbyPropertySelect(property.id)}
                          >
                            <div className="p-4">
                              <div className="flex justify-between items-start">
                                <div>
                                  <h4 className="font-medium text-dubai-blue-900">{property.name}</h4>
                                  <p className="text-sm text-dubai-blue-700">
                                    {property.distance} km away
                                  </p>
                                </div>
                                <div className="text-right">
                                  <div className="font-medium text-tuscany">{formatCurrency(property.currentPrice)}</div>
                                  <div className="text-sm text-dubai-blue-700">
                                    {calculateGrowth(property.originalPrice, property.currentPrice)}% growth since {property.originalYear}
                                  </div>
                                </div>
                              </div>
                              <div className="mt-2 flex items-center text-sm text-dubai-blue-700">
                                <span className="flex items-center">
                                  <FaBed className="mx-1" /> {property.beds === 0 ? 'Studio' : property.beds} | 
                                  <FaBath className="mx-1" /> {property.baths} | 
                                  <span className="ml-1">{property.sqft.toLocaleString()} sqft</span>
                                </span>
                              </div>
                            </div>
                          </div>
                        ))}
                      </div>
                    ) : (
                      <p className="text-dubai-blue-700 italic text-center py-4">No nearby properties found.</p>
                    )}
                  </div>
                </div>
              )}
              
              {/* Ongoing Projects */}
              {selectedTab === 'ongoing' && (
                <div>
                  <h3 className="text-xl font-bold text-dubai-blue-900 mb-4">Ongoing Projects in {propertyData.metadata.location}</h3>
                  
                  {propertyData.ongoingProjects.length > 0 ? (
                    <div className="space-y-4">
                      {propertyData.ongoingProjects.map((project) => (
                        <div key={project.id} className="border border-almond rounded-lg p-4">
                          <div className="flex justify-between items-start">
                            <div>
                              <h4 className="font-medium text-dubai-blue-900">{project.name}</h4>
                              <p className="text-sm text-dubai-blue-700">
                                Developer: {project.developer}
                              </p>
                            </div>
                            <div className="text-right">
                              <div className="font-medium text-tuscany">{project.status}</div>
                              <div className="text-sm text-dubai-blue-700">
                                Expected Completion: {project.expectedCompletion}
                              </div>
                            </div>
                          </div>
                        </div>
                      ))}
                    </div>
                  ) : (
                    <p className="text-dubai-blue-700 italic text-center py-4">No ongoing projects found in this area.</p>
                  )}
                </div>
              )}
              
              {/* Developer Info */}
              {selectedTab === 'developer' && (
                <div>
                  <div className="flex items-center justify-between mb-4">
                    <h3 className="text-xl font-bold text-dubai-blue-900">Developer Information</h3>
                    <button
                      onClick={toggleDeveloperDetails}
                      className="text-sm text-tuscany hover:text-tuscany/70 flex items-center gap-1"
                    >
                      {developerDetailsExpanded ? (
                        <>Less Details <FaChevronRight className="h-3 w-3" /></>
                      ) : (
                        <>More Details <FaChevronRight className="h-3 w-3" /></>
                      )}
                    </button>
                  </div>
                  
                  <div className="border border-almond rounded-lg p-4 mb-6">
                    <h4 className="font-medium text-dubai-blue-900 text-lg">{propertyData.developer.name}</h4>
                    <p className="text-dubai-blue-700 mb-2">Headquarters: {propertyData.developer.headquarters}</p>
                    
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mt-4">
                      <div>
                        <p className="text-dubai-blue-700">
                          <span className="font-medium">Total Projects:</span> {propertyData.developer.totalProjects}
                        </p>
                      </div>
                      <div>
                        <p className="text-dubai-blue-700">
                          <span className="font-medium">Average ROI:</span> {propertyData.developer.averageROI}%
                        </p>
                      </div>
                    </div>
                    
                    {developerDetailsExpanded && (
                      <div className="mt-6">
                        <h5 className="font-medium text-dubai-blue-900 mb-3">Revenue by Year (in millions AED)</h5>
                        <div className="h-72 bg-white rounded-lg p-2">
                          <ResponsiveContainer width="100%" height="100%">
                            <BarChart
                              data={propertyData.developer.revenueByYear}
                              margin={{ top: 5, right: 30, left: 20, bottom: 5 }}
                            >
                              <CartesianGrid strokeDasharray="3 3" />
                              <XAxis dataKey="year" />
                              <YAxis />
                              <Tooltip />
                              <Legend />
                              <Bar dataKey="residential" name="Residential" fill="#E28F83" />
                              <Bar dataKey="commercial" name="Commercial" fill="#2B4865" />
                              <Bar dataKey="mixedUse" name="Mixed Use" fill="#8FBDD3" />
                            </BarChart>
                          </ResponsiveContainer>
                        </div>
                        
                        <div className="mt-6">
                          <h5 className="font-medium text-dubai-blue-900 mb-3">Popular Projects</h5>
                          <div className="space-y-3">
                            {generatePopularProjects(propertyData.developer.name).map((project, index) => (
                              <div key={index} className="flex justify-between items-center p-3 bg-almond/10 rounded-lg">
                                <div>
                                  <p className="font-medium text-dubai-blue-900">{project.name}</p>
                                  <p className="text-sm text-dubai-blue-700">{project.location}</p>
                                </div>
                                <div className="text-right">
                                  <p className="text-tuscany font-medium">{project.status}</p>
                                  <p className="text-sm text-dubai-blue-700">{project.type}</p>
                                </div>
                              </div>
                            ))}
                          </div>
                        </div>
                      </div>
                    )}
                  </div>
                </div>
              )}
            </div>
          </div>
        )}
      </main>
    </div>
  );
}
